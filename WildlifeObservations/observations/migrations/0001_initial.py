# Generated by Django 3.2.11 on 2022-01-25 09:50

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=30)),
                ('site_name', models.CharField(max_length=5)),
                ('altitude_band', models.IntegerField()),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='TaxonomyClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxclass', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Taxonomy classes',
            },
        ),
        migrations.CreateModel(
            name='TaxonomyFamily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Taxonomy families',
            },
        ),
        migrations.CreateModel(
            name='TaxonomyOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.CharField(max_length=255, unique=True)),
                ('taxclass', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='observations.taxonomyclass')),
            ],
            options={
                'verbose_name_plural': 'Taxonomy orders',
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('method', models.CharField(choices=[('Net', 'Net'), ('Hand', 'Hand')], max_length=5)),
                ('repeat', models.CharField(choices=[('1', '1'), ('2', '2')], max_length=2)),
                ('site_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='observations.site')),
            ],
        ),
        migrations.CreateModel(
            name='TaxonomySuborder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suborder', models.CharField(max_length=20, unique=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='observations.taxonomyorder')),
            ],
            options={
                'verbose_name_plural': 'Taxonomy sub-orders',
            },
        ),
        migrations.CreateModel(
            name='TaxonomySpecies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latin_name', models.CharField(max_length=255, unique=True)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='observations.taxonomyfamily')),
            ],
            options={
                'verbose_name_plural': 'Taxonomy species',
            },
        ),
        migrations.AddField(
            model_name='taxonomyfamily',
            name='suborder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='observations.taxonomysuborder'),
        ),
        migrations.CreateModel(
            name='SpeciesName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('common_name_english', models.CharField(blank=True, max_length=100, null=True)),
                ('common_name_catalan', models.CharField(blank=True, max_length=100, null=True)),
                ('common_name_spanish', models.CharField(blank=True, max_length=100, null=True)),
                ('latin_name', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='observations.taxonomyspecies')),
            ],
            options={
                'verbose_name_plural': 'Species names',
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specimen_id', models.CharField(max_length=22, unique=True)),
                ('length_head_abdomen', models.FloatField()),
                ('length_head_tegmina', models.FloatField()),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='observations.visit')),
            ],
        ),
        migrations.CreateModel(
            name='Identification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification_notes', models.TextField(max_length=2048)),
                ('identification_guide', models.CharField(max_length=20)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('stage', models.CharField(choices=[('Adult', 'Adult'), ('Nymph', 'Nymph')], max_length=5)),
                ('confidence', models.CharField(choices=[('In_progress', 'In progress'), ('Check', 'Check'), ('Confirmed', 'Confirmed'), ('Redo', 'Redo')], max_length=11)),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='observations.speciesname')),
                ('specimen_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='observations.observation')),
            ],
        ),
    ]
